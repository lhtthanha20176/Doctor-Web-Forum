@model Doctorsforum.Models.DB_user

@{
  ViewBag.Title = "Create";
  Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Create", "DB_user", FormMethod.Post, new { enctype = "multipart/form-data" })) {
  @Html.AntiForgeryToken()

  <div class="container-fluid flex-1">
    <h2>User</h2>
    <h4>Create User</h4>

    <div class="form-horizontal">
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <div class="form-group">
        @Html.LabelFor(model => model.User_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.User_id, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.User_id, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.First_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.First_name, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.First_name, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Last_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Last_name, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Last_name, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          <input type="file" name="image" class="form-control" />
          @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Phone_number, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Phone_number, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Email_address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Email_address, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Email_address, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.DropDownListFor(model => model.Sex, new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "Male" }, new SelectListItem { Text = "Female", Value = "Female" } }, new { @class = "form-control", @style = "height:35px" })
          @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.profession, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.DropDownListFor(model => model.profession, new List<SelectListItem> { new SelectListItem { Text = "Doctor", Value = "Doctor" }, new SelectListItem { Text = "Customer", Value = "Customer" } }, new { @class = "form-control", @style = "height:35px" })
          @Html.ValidationMessageFor(model => model.profession, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.public_profile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.DropDownListFor(model => model.profession, new List<SelectListItem> { new SelectListItem { Text = "Yes", Value = "1" }, new SelectListItem { Text = "No", Value = "0" } }, new { @class = "form-control", @style = "height:35px" })
          @Html.ValidationMessageFor(model => model.public_profile, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Create" class="btn btn-primary btn-block" />
        </div>
      </div>
    </div>
  </div>
}

<hr />

<div class="text-center">
  @Html.ActionLink("Back to List", "Index")
</div>
